{"message":"type `circularityEvents` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/events.rs","byte_start":250,"byte_end":267,"line_start":13,"line_end":13,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct circularityEvents {","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"circularity/src/events.rs","byte_start":250,"byte_end":267,"line_start":13,"line_end":13,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct circularityEvents {","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":"CircularityEvents","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `circularityEvents` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/events.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct circularityEvents {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case (notice the capitalization): `CircularityEvents`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":629,"byte_end":632,"line_start":22,"line_end":22,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn func_set_owner(ctx: &ScFuncContext, f: &SetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":629,"byte_end":632,"line_start":22,"line_end":22,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn func_set_owner(ctx: &ScFuncContext, f: &SetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:22:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_set_owner(ctx: &ScFuncContext, f: &SetOwnerContext) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":756,"byte_end":759,"line_start":26,"line_end":26,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn view_get_owner(ctx: &ScViewContext, f: &GetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":756,"byte_end":759,"line_start":26,"line_end":26,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn view_get_owner(ctx: &ScViewContext, f: &GetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:26:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_owner(ctx: &ScViewContext, f: &GetOwnerContext) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `amountPerPackage`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1754,"byte_end":1770,"line_start":48,"line_end":48,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let amountPerPackage: u64 = amountPerCharge * packageWeight / chargeWeight;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1754,"byte_end":1770,"line_start":48,"line_end":48,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let amountPerPackage: u64 = amountPerCharge * packageWeight / chargeWeight;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"_amountPerPackage","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amountPerPackage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:48:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let amountPerPackage: u64 = amountPerCharge * packageWeight / chargeWeight;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amountPerPackage`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4273,"byte_end":4276,"line_start":108,"line_end":108,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"pub fn view_get_amount_of_required_funds(ctx: &ScViewContext, f: &GetAmountOfRequiredFundsContext) {","highlight_start":42,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4273,"byte_end":4276,"line_start":108,"line_end":108,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"pub fn view_get_amount_of_required_funds(ctx: &ScViewContext, f: &GetAmountOfRequiredFundsContext) {","highlight_start":42,"highlight_end":45}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:108:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_amount_of_required_funds(ctx: &ScViewContext, f: &GetAmountOfRequiredFundsContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4523,"byte_end":4526,"line_start":113,"line_end":113,"column_start":35,"column_end":38,"is_primary":true,"text":[{"text":"pub fn view_get_token_per_package(ctx: &ScViewContext, f: &GetTokenPerPackageContext) {","highlight_start":35,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4523,"byte_end":4526,"line_start":113,"line_end":113,"column_start":35,"column_end":38,"is_primary":true,"text":[{"text":"pub fn view_get_token_per_package(ctx: &ScViewContext, f: &GetTokenPerPackageContext) {","highlight_start":35,"highlight_end":38}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:113:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_token_per_package(ctx: &ScViewContext, f: &GetTokenPerPackageContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4838,"byte_end":4841,"line_start":122,"line_end":122,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn view_get_materials(ctx: &ScViewContext, f: &GetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4838,"byte_end":4841,"line_start":122,"line_end":122,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn view_get_materials(ctx: &ScViewContext, f: &GetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:122:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_materials(ctx: &ScViewContext, f: &GetMaterialsContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":5279,"byte_end":5282,"line_start":135,"line_end":135,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn func_set_materials(ctx: &ScFuncContext, f: &SetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":5279,"byte_end":5282,"line_start":135,"line_end":135,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn func_set_materials(ctx: &ScFuncContext, f: &SetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:135:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_set_materials(ctx: &ScFuncContext, f: &SetMaterialsContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `purpose`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":5738,"byte_end":5745,"line_start":152,"line_end":152,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let purpose: String = f.params.purpose().value();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":5738,"byte_end":5745,"line_start":152,"line_end":152,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let purpose: String = f.params.purpose().value();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_purpose","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `purpose`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:152:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let purpose: String = f.params.purpose().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_purpose`\u001b[0m\n\n"}
{"message":"unused variable: `index`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":7946,"byte_end":7951,"line_start":209,"line_end":209,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let index = fracComp.length();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":7946,"byte_end":7951,"line_start":209,"line_end":209,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let index = fracComp.length();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"_index","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `index`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:209:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let index = fracComp.length();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_index`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6672,"byte_end":6675,"line_start":182,"line_end":182,"column_start":32,"column_end":35,"is_primary":true,"text":[{"text":"pub fn func_add_pp_to_fraction(ctx: &ScFuncContext, f: &AddPPToFractionContext) {","highlight_start":32,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6672,"byte_end":6675,"line_start":182,"line_end":182,"column_start":32,"column_end":35,"is_primary":true,"text":[{"text":"pub fn func_add_pp_to_fraction(ctx: &ScFuncContext, f: &AddPPToFractionContext) {","highlight_start":32,"highlight_end":35}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:182:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_add_pp_to_fraction(ctx: &ScFuncContext, f: &AddPPToFractionContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10780,"byte_end":10791,"line_start":285,"line_end":285,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let mut address: ScAgentID;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10780,"byte_end":10784,"line_start":285,"line_end":285,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut address: ScAgentID;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:285:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut address: ScAgentID;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable `chargeWeight` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1516,"byte_end":1528,"line_start":44,"line_end":44,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let chargeWeight: u64 = 1000000000; // in miligramm","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1516,"byte_end":1528,"line_start":44,"line_end":44,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let chargeWeight: u64 = 1000000000; // in miligramm","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"charge_weight","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `chargeWeight` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:44:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let chargeWeight: u64 = 1000000000; // in miligramm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `charge_weight`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `packageWeight` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1572,"byte_end":1585,"line_start":45,"line_end":45,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let packageWeight: u64 = 2000;  // in miligramm","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1572,"byte_end":1585,"line_start":45,"line_end":45,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let packageWeight: u64 = 2000;  // in miligramm","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"package_weight","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `packageWeight` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:45:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let packageWeight: u64 = 2000;  // in miligramm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `package_weight`\u001b[0m\n\n"}
{"message":"variable `totalPackages` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1624,"byte_end":1637,"line_start":46,"line_end":46,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let totalPackages: u64 = chargeWeight / packageWeight;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1624,"byte_end":1637,"line_start":46,"line_end":46,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let totalPackages: u64 = chargeWeight / packageWeight;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"total_packages","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `totalPackages` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:46:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let totalPackages: u64 = chargeWeight / packageWeight;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_packages`\u001b[0m\n\n"}
{"message":"variable `amountPerCharge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1683,"byte_end":1698,"line_start":47,"line_end":47,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let amountPerCharge: u64 = ctx.incoming().balance(&ScColor::IOTA);","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1683,"byte_end":1698,"line_start":47,"line_end":47,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let amountPerCharge: u64 = ctx.incoming().balance(&ScColor::IOTA);","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"amount_per_charge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `amountPerCharge` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:47:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let amountPerCharge: u64 = ctx.incoming().balance(&ScColor::IOTA);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `amount_per_charge`\u001b[0m\n\n"}
{"message":"variable `amountPerPackage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1754,"byte_end":1770,"line_start":48,"line_end":48,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let amountPerPackage: u64 = amountPerCharge * packageWeight / chargeWeight;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1754,"byte_end":1770,"line_start":48,"line_end":48,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let amountPerPackage: u64 = amountPerCharge * packageWeight / chargeWeight;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"amount_per_package","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `amountPerPackage` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:48:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let amountPerPackage: u64 = amountPerCharge * packageWeight / chargeWeight;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `amount_per_package`\u001b[0m\n\n"}
{"message":"variable `rewardPerPackageProducer` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1834,"byte_end":1858,"line_start":49,"line_end":49,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let rewardPerPackageProducer: u64 = amountPerCharge / totalPackages * ((100 - f.state.share_recycler().value()) / 100) as u64;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1834,"byte_end":1858,"line_start":49,"line_end":49,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let rewardPerPackageProducer: u64 = amountPerCharge / totalPackages * ((100 - f.state.share_recycler().value()) / 100) as u64;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":"reward_per_package_producer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `rewardPerPackageProducer` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:49:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let rewardPerPackageProducer: u64 = amountPerCharge / totalPackages * ((100 - f.state.share_recycler().value()) / 100) as u64;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `reward_per_package_producer`\u001b[0m\n\n"}
{"message":"variable `rewardPaerPackageRecycler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1965,"byte_end":1990,"line_start":50,"line_end":50,"column_start":9,"column_end":34,"is_primary":true,"text":[{"text":"    let rewardPaerPackageRecycler: u64 = amountPerCharge / totalPackages * f.state.share_recycler().value() as u64 / 100;","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":1965,"byte_end":1990,"line_start":50,"line_end":50,"column_start":9,"column_end":34,"is_primary":true,"text":[{"text":"    let rewardPaerPackageRecycler: u64 = amountPerCharge / totalPackages * f.state.share_recycler().value() as u64 / 100;","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":"reward_paer_package_recycler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `rewardPaerPackageRecycler` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:50:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let rewardPaerPackageRecycler: u64 = amountPerCharge / totalPackages * f.state.share_recycler().value() as u64 / 100;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `reward_paer_package_recycler`\u001b[0m\n\n"}
{"message":"variable `packagesSorted` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2087,"byte_end":2101,"line_start":51,"line_end":51,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let packagesSorted: u64 = 0;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2087,"byte_end":2101,"line_start":51,"line_end":51,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let packagesSorted: u64 = 0;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"packages_sorted","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `packagesSorted` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:51:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let packagesSorted: u64 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packages_sorted`\u001b[0m\n\n"}
{"message":"variable `packagesWrongSorted` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2120,"byte_end":2139,"line_start":52,"line_end":52,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let packagesWrongSorted: u64 = 0;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2120,"byte_end":2139,"line_start":52,"line_end":52,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let packagesWrongSorted: u64 = 0;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"packages_wrong_sorted","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `packagesWrongSorted` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:52:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let packagesWrongSorted: u64 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packages_wrong_sorted`\u001b[0m\n\n"}
{"message":"variable `packagesAlreadyPaid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2158,"byte_end":2177,"line_start":53,"line_end":53,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let packagesAlreadyPaid = 0;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2158,"byte_end":2177,"line_start":53,"line_end":53,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let packagesAlreadyPaid = 0;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"packages_already_paid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `packagesAlreadyPaid` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:53:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let packagesAlreadyPaid = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packages_already_paid`\u001b[0m\n\n"}
{"message":"variable `activationDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2191,"byte_end":2205,"line_start":54,"line_end":54,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let activationDate: u64 = ctx.timestamp() / NANO_TIME_DIVIDER;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2191,"byte_end":2205,"line_start":54,"line_end":54,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let activationDate: u64 = ctx.timestamp() / NANO_TIME_DIVIDER;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"activation_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `activationDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:54:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let activationDate: u64 = ctx.timestamp() / NANO_TIME_DIVIDER;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `activation_date`\u001b[0m\n\n"}
{"message":"variable `expiryDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2258,"byte_end":2268,"line_start":55,"line_end":55,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let expiryDate: u64 = f.params.expiry_date().value() / NANO_TIME_DIVIDER;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2258,"byte_end":2268,"line_start":55,"line_end":55,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let expiryDate: u64 = f.params.expiry_date().value() / NANO_TIME_DIVIDER;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"expiry_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `expiryDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:55:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let expiryDate: u64 = f.params.expiry_date().value() / NANO_TIME_DIVIDER;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `expiry_date`\u001b[0m\n\n"}
{"message":"variable `lastPayout` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2336,"byte_end":2346,"line_start":56,"line_end":56,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let lastPayout = activationDate;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2336,"byte_end":2346,"line_start":56,"line_end":56,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let lastPayout = activationDate;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"last_payout","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `lastPayout` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:56:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let lastPayout = activationDate;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `last_payout`\u001b[0m\n\n"}
{"message":"variable `ppNew` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2374,"byte_end":2379,"line_start":58,"line_end":58,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let ppNew = ProductPass{","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":2374,"byte_end":2379,"line_start":58,"line_end":58,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let ppNew = ProductPass{","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"pp_new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppNew` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:58:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppNew = ProductPass{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_new`\u001b[0m\n\n"}
{"message":"variable `requiredToken` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":3123,"byte_end":3136,"line_start":80,"line_end":80,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredToken = &ppNew.charge_weight * f.state.price_per_mg().value();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":3123,"byte_end":3136,"line_start":80,"line_end":80,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredToken = &ppNew.charge_weight * f.state.price_per_mg().value();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"required_token","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `requiredToken` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:80:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let requiredToken = &ppNew.charge_weight * f.state.price_per_mg().value();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `required_token`\u001b[0m\n\n"}
{"message":"variable `requiredFunds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4341,"byte_end":4354,"line_start":109,"line_end":109,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredFunds: u64 = f.params.charge_weight().value() * f.state.price_per_mg().value();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4341,"byte_end":4354,"line_start":109,"line_end":109,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredFunds: u64 = f.params.charge_weight().value() * f.state.price_per_mg().value();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"required_funds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `requiredFunds` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:109:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let requiredFunds: u64 = f.params.charge_weight().value() * f.state.price_per_mg().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `required_funds`\u001b[0m\n\n"}
{"message":"variable `pricePerMg` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4630,"byte_end":4640,"line_start":115,"line_end":115,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let pricePerMg = f.state.price_per_mg().value();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4630,"byte_end":4640,"line_start":115,"line_end":115,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let pricePerMg = f.state.price_per_mg().value();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"price_per_mg","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `pricePerMg` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:115:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let pricePerMg = f.state.price_per_mg().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `price_per_mg`\u001b[0m\n\n"}
{"message":"variable `tokenPerPackage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4683,"byte_end":4698,"line_start":116,"line_end":116,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let tokenPerPackage: u64 =  pass.package_weight * pricePerMg;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":4683,"byte_end":4698,"line_start":116,"line_end":116,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let tokenPerPackage: u64 =  pass.package_weight * pricePerMg;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"token_per_package","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tokenPerPackage` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:116:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let tokenPerPackage: u64 =  pass.package_weight * pricePerMg;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `token_per_package`\u001b[0m\n\n"}
{"message":"variable `newComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":5376,"byte_end":5383,"line_start":138,"line_end":138,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newComp = f.params.comp();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":5376,"byte_end":5383,"line_start":138,"line_end":138,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newComp = f.params.comp();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"new_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:138:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newComp = f.params.comp();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_comp`\u001b[0m\n\n"}
{"message":"variable `fracID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":5793,"byte_end":5799,"line_start":154,"line_end":154,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = create_random_hash(ctx);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":5793,"byte_end":5799,"line_start":154,"line_end":154,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = create_random_hash(ctx);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"frac_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:154:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracID = create_random_hash(ctx);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_id`\u001b[0m\n\n"}
{"message":"variable `newFrac` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6069,"byte_end":6076,"line_start":160,"line_end":160,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newFrac = Fraction {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6069,"byte_end":6076,"line_start":160,"line_end":160,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newFrac = Fraction {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"new_frac","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newFrac` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:160:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newFrac = Fraction {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_frac`\u001b[0m\n\n"}
{"message":"variable `ppID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6736,"byte_end":6740,"line_start":184,"line_end":184,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6736,"byte_end":6740,"line_start":184,"line_end":184,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"pp_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:184:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppID = f.params.pp_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_id`\u001b[0m\n\n"}
{"message":"variable `fracID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6777,"byte_end":6783,"line_start":185,"line_end":185,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6777,"byte_end":6783,"line_start":185,"line_end":185,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"frac_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:185:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracID = f.params.frac_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_id`\u001b[0m\n\n"}
{"message":"variable `ppComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6934,"byte_end":6940,"line_start":188,"line_end":188,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let ppComp = f.state.compositions().get_compositions(&ppID);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6934,"byte_end":6940,"line_start":188,"line_end":188,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let ppComp = f.state.compositions().get_compositions(&ppID);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"pp_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:188:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppComp = f.state.compositions().get_compositions(&ppID);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_comp`\u001b[0m\n\n"}
{"message":"variable `fracComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6999,"byte_end":7007,"line_start":189,"line_end":189,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp = f.state.frac_compositions().get_frac_compositions(&fracID);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":6999,"byte_end":7007,"line_start":189,"line_end":189,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp = f.state.frac_compositions().get_frac_compositions(&fracID);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"frac_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:189:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracComp = f.state.frac_compositions().get_frac_compositions(&fracID);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_comp`\u001b[0m\n\n"}
{"message":"variable `foundMat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":7195,"byte_end":7203,"line_start":195,"line_end":195,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        let mut foundMat: bool = false;","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":7195,"byte_end":7203,"line_start":195,"line_end":195,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        let mut foundMat: bool = false;","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"found_mat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `foundMat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:195:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut foundMat: bool = false;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `found_mat`\u001b[0m\n\n"}
{"message":"variable `newWeight` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":7401,"byte_end":7410,"line_start":199,"line_end":199,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"                let newWeight = fracComp.get_frac_composition(j).value().weight + ppComp.get_composition(i).value().proportion as u64 * pp.package_weight /1000;   // div by 1000 because proportion is in per mil","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":7401,"byte_end":7410,"line_start":199,"line_end":199,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"                let newWeight = fracComp.get_frac_composition(j).value().weight + ppComp.get_composition(i).value().proportion as u64 * pp.package_weight /1000;   // div by 1000 because proportion is in per mil","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":"new_weight","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newWeight` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:199:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m   let newWeight = fracComp.get_frac_composition(j).value().weight + ppComp.get_composition(i).value().proportion as u64 * pp.package_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_weight`\u001b[0m\n\n"}
{"message":"variable `newShare` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":7629,"byte_end":7637,"line_start":201,"line_end":201,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let newShare = FracComposition {","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":7629,"byte_end":7637,"line_start":201,"line_end":201,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let newShare = FracComposition {","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":"new_share","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newShare` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:201:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let newShare = FracComposition {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_share`\u001b[0m\n\n"}
{"message":"variable `newMat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":8188,"byte_end":8194,"line_start":214,"line_end":214,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let newMat = FracComposition{","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":8188,"byte_end":8194,"line_start":214,"line_end":214,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let newMat = FracComposition{","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"new_mat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newMat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:214:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let newMat = FracComposition{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_mat`\u001b[0m\n\n"}
{"message":"variable `fracID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":9368,"byte_end":9374,"line_start":244,"line_end":244,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":9368,"byte_end":9374,"line_start":244,"line_end":244,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"frac_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:244:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracID = f.params.frac_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_id`\u001b[0m\n\n"}
{"message":"variable `recyclateID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":9494,"byte_end":9505,"line_start":247,"line_end":247,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let recyclateID = create_random_hash(ctx);    ","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":9494,"byte_end":9505,"line_start":247,"line_end":247,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let recyclateID = create_random_hash(ctx);    ","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"recyclate_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `recyclateID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:247:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let recyclateID = create_random_hash(ctx);    \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `recyclate_id`\u001b[0m\n\n"}
{"message":"variable `newRecy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":9805,"byte_end":9812,"line_start":254,"line_end":254,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newRecy = Recyclate {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":9805,"byte_end":9812,"line_start":254,"line_end":254,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newRecy = Recyclate {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"new_recy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newRecy` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:254:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newRecy = Recyclate {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_recy`\u001b[0m\n\n"}
{"message":"variable `newRecyCompProxy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10141,"byte_end":10157,"line_start":267,"line_end":267,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let newRecyCompProxy = f.state.recy_compositions().get_recy_compositions(&newRecy.recy_id);","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10141,"byte_end":10157,"line_start":267,"line_end":267,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let newRecyCompProxy = f.state.recy_compositions().get_recy_compositions(&newRecy.recy_id);","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"new_recy_comp_proxy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newRecyCompProxy` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:267:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newRecyCompProxy = f.state.recy_compositions().get_recy_compositions(&newRecy.recy_id);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_recy_comp_proxy`\u001b[0m\n\n"}
{"message":"variable `fracComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10237,"byte_end":10245,"line_start":268,"line_end":268,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp: ArrayOfMutableFracComposition = f.state.frac_compositions().get_frac_compositions(&newRecy.frac_id);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10237,"byte_end":10245,"line_start":268,"line_end":268,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp: ArrayOfMutableFracComposition = f.state.frac_compositions().get_frac_compositions(&newRecy.frac_id);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"frac_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:268:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracComp: ArrayOfMutableFracComposition = f.state.frac_compositions().get_frac_compositions(&newRecy.frac_id);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_comp`\u001b[0m\n\n"}
{"message":"variable `fComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10410,"byte_end":10415,"line_start":272,"line_end":272,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let fComp = fracComp.get_frac_composition(i).value();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10410,"byte_end":10415,"line_start":272,"line_end":272,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let fComp = fracComp.get_frac_composition(i).value();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":"f_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:272:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let fComp = fracComp.get_frac_composition(i).value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `f_comp`\u001b[0m\n\n"}
{"message":"variable `recyComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10547,"byte_end":10555,"line_start":276,"line_end":276,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let recyComp = RecyComposition{","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":10547,"byte_end":10555,"line_start":276,"line_end":276,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let recyComp = RecyComposition{","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"recy_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `recyComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:276:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let recyComp = RecyComposition{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `recy_comp`\u001b[0m\n\n"}
{"message":"variable `ppID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":13959,"byte_end":13963,"line_start":379,"line_end":379,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.frac_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":13959,"byte_end":13963,"line_start":379,"line_end":379,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.frac_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"pp_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:379:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m379\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppID = f.params.frac_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_id`\u001b[0m\n\n"}
{"message":"variable `currentTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":14160,"byte_end":14171,"line_start":384,"line_end":384,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let currentTime: u64 = ctx.timestamp() / NANO_TIME_DIVIDER;    ","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":14160,"byte_end":14171,"line_start":384,"line_end":384,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let currentTime: u64 = ctx.timestamp() / NANO_TIME_DIVIDER;    ","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"current_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:384:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m384\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let currentTime: u64 = ctx.timestamp() / NANO_TIME_DIVIDER;    \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_time`\u001b[0m\n\n"}
{"message":"variable `ppID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":15005,"byte_end":15009,"line_start":405,"line_end":405,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"circularity/src/circularity.rs","byte_start":15005,"byte_end":15009,"line_start":405,"line_end":405,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"pp_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcircularity/src/circularity.rs:405:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppID = f.params.pp_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_id`\u001b[0m\n\n"}
{"message":"51 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 51 warnings emitted\u001b[0m\n\n"}
