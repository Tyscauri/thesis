{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":629,"byte_end":632,"line_start":22,"line_end":22,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn func_set_owner(ctx: &ScFuncContext, f: &SetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":629,"byte_end":632,"line_start":22,"line_end":22,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn func_set_owner(ctx: &ScFuncContext, f: &SetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:22:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_set_owner(ctx: &ScFuncContext, f: &SetOwnerContext) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":756,"byte_end":759,"line_start":26,"line_end":26,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn view_get_owner(ctx: &ScViewContext, f: &GetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":756,"byte_end":759,"line_start":26,"line_end":26,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn view_get_owner(ctx: &ScViewContext, f: &GetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:26:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_owner(ctx: &ScViewContext, f: &GetOwnerContext) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"value assigned to `requiredToken` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":3446,"byte_end":3459,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"    let mut requiredToken = &ppNew.charge_weight * f.state.price_per_mg().value();","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `requiredToken` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:88:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut requiredToken = &ppNew.charge_weight * f.state.price_per_mg().value();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5240,"byte_end":5243,"line_start":140,"line_end":140,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"pub fn view_get_amount_of_required_funds(ctx: &ScViewContext, f: &GetAmountOfRequiredFundsContext) {","highlight_start":42,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5240,"byte_end":5243,"line_start":140,"line_end":140,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"pub fn view_get_amount_of_required_funds(ctx: &ScViewContext, f: &GetAmountOfRequiredFundsContext) {","highlight_start":42,"highlight_end":45}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:140:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_amount_of_required_funds(ctx: &ScViewContext, f: &GetAmountOfRequiredFundsContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5490,"byte_end":5493,"line_start":145,"line_end":145,"column_start":35,"column_end":38,"is_primary":true,"text":[{"text":"pub fn view_get_token_per_package(ctx: &ScViewContext, f: &GetTokenPerPackageContext) {","highlight_start":35,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5490,"byte_end":5493,"line_start":145,"line_end":145,"column_start":35,"column_end":38,"is_primary":true,"text":[{"text":"pub fn view_get_token_per_package(ctx: &ScViewContext, f: &GetTokenPerPackageContext) {","highlight_start":35,"highlight_end":38}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:145:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_token_per_package(ctx: &ScViewContext, f: &GetTokenPerPackageContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5805,"byte_end":5808,"line_start":154,"line_end":154,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn view_get_materials(ctx: &ScViewContext, f: &GetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5805,"byte_end":5808,"line_start":154,"line_end":154,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn view_get_materials(ctx: &ScViewContext, f: &GetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:154:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_materials(ctx: &ScViewContext, f: &GetMaterialsContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `purpose`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":6255,"byte_end":6262,"line_start":168,"line_end":168,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let purpose: String = f.params.purpose().value();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":6255,"byte_end":6262,"line_start":168,"line_end":168,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let purpose: String = f.params.purpose().value();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_purpose","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `purpose`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:168:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let purpose: String = f.params.purpose().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_purpose`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":15920,"byte_end":15923,"line_start":434,"line_end":434,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"pub fn func_add_recycler(ctx: &ScFuncContext, f: &AddRecyclerContext) {","highlight_start":26,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":15920,"byte_end":15923,"line_start":434,"line_end":434,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"pub fn func_add_recycler(ctx: &ScFuncContext, f: &AddRecyclerContext) {","highlight_start":26,"highlight_end":29}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:434:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m434\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_add_recycler(ctx: &ScFuncContext, f: &AddRecyclerContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":16079,"byte_end":16082,"line_start":438,"line_end":438,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"pub fn func_add_sorter(ctx: &ScFuncContext, f: &AddSorterContext) {","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":16079,"byte_end":16082,"line_start":438,"line_end":438,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"pub fn func_add_sorter(ctx: &ScFuncContext, f: &AddSorterContext) {","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:438:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_add_sorter(ctx: &ScFuncContext, f: &AddSorterContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":17825,"byte_end":17828,"line_start":488,"line_end":488,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"pub fn func_set_donation_address(ctx: &ScFuncContext, f: &SetDonationAddressContext) {","highlight_start":34,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":17825,"byte_end":17828,"line_start":488,"line_end":488,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"pub fn func_set_donation_address(ctx: &ScFuncContext, f: &SetDonationAddressContext) {","highlight_start":34,"highlight_end":37}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:488:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m488\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_set_donation_address(ctx: &ScFuncContext, f: &SetDonationAddressContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":18487,"byte_end":18490,"line_start":507,"line_end":507,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"pub fn view_get_donation_address(ctx: &ScViewContext, f: &GetDonationAddressContext) {","highlight_start":34,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":18487,"byte_end":18490,"line_start":507,"line_end":507,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"pub fn view_get_donation_address(ctx: &ScViewContext, f: &GetDonationAddressContext) {","highlight_start":34,"highlight_end":37}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:507:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m507\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_donation_address(ctx: &ScViewContext, f: &GetDonationAddressContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":13425,"byte_end":13436,"line_start":355,"line_end":355,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let mut address: ScAgentID;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":13425,"byte_end":13429,"line_start":355,"line_end":355,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut address: ScAgentID;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:355:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m355\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut address: ScAgentID;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable `packageWeight` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":1180,"byte_end":1193,"line_start":40,"line_end":40,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let packageWeight: u64 = f.params.package_weight().value();  // in miligramm","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":1180,"byte_end":1193,"line_start":40,"line_end":40,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let packageWeight: u64 = f.params.package_weight().value();  // in miligramm","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"package_weight","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `packageWeight` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:40:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let packageWeight: u64 = f.params.package_weight().value();  // in miligramm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `package_weight`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `packagesNumber` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":1261,"byte_end":1275,"line_start":41,"line_end":41,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let packagesNumber: u64 = f.params.packages_number().value();","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":1261,"byte_end":1275,"line_start":41,"line_end":41,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let packagesNumber: u64 = f.params.packages_number().value();","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"packages_number","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `packagesNumber` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:41:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let packagesNumber: u64 = f.params.packages_number().value();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packages_number`\u001b[0m\n\n"}
{"message":"variable `amountPerCharge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":1327,"byte_end":1342,"line_start":42,"line_end":42,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let amountPerCharge: u64 = ctx.incoming().balance(&ScColor::IOTA);","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":1327,"byte_end":1342,"line_start":42,"line_end":42,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let amountPerCharge: u64 = ctx.incoming().balance(&ScColor::IOTA);","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"amount_per_charge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `amountPerCharge` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:42:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let amountPerCharge: u64 = ctx.incoming().balance(&ScColor::IOTA);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `amount_per_charge`\u001b[0m\n\n"}
{"message":"variable `amountPerPackage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":1398,"byte_end":1414,"line_start":43,"line_end":43,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let amountPerPackage: u64 = amountPerCharge / packagesNumber;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":1398,"byte_end":1414,"line_start":43,"line_end":43,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let amountPerPackage: u64 = amountPerCharge / packagesNumber;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"amount_per_package","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `amountPerPackage` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:43:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let amountPerPackage: u64 = amountPerCharge / packagesNumber;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `amount_per_package`\u001b[0m\n\n"}
{"message":"variable `chargeWeight` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2203,"byte_end":2215,"line_start":59,"line_end":59,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let chargeWeight: u64 = packageWeight * packagesNumber; // in miligramm","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2203,"byte_end":2215,"line_start":59,"line_end":59,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let chargeWeight: u64 = packageWeight * packagesNumber; // in miligramm","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"charge_weight","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `chargeWeight` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:59:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let chargeWeight: u64 = packageWeight * packagesNumber; // in miligramm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `charge_weight`\u001b[0m\n\n"}
{"message":"variable `rewardPerPackageProducer` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2279,"byte_end":2303,"line_start":60,"line_end":60,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let rewardPerPackageProducer: u64 = amountPerPackage * (100 -  share_recycler)/ 100;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2279,"byte_end":2303,"line_start":60,"line_end":60,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let rewardPerPackageProducer: u64 = amountPerPackage * (100 -  share_recycler)/ 100;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":"reward_per_package_producer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `rewardPerPackageProducer` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:60:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let rewardPerPackageProducer: u64 = amountPerPackage * (100 -  share_recycler)/ 100;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `reward_per_package_producer`\u001b[0m\n\n"}
{"message":"variable `rewardPerPackageRecycler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2368,"byte_end":2392,"line_start":61,"line_end":61,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let rewardPerPackageRecycler: u64 = amountPerPackage * share_recycler / 100;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2368,"byte_end":2392,"line_start":61,"line_end":61,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let rewardPerPackageRecycler: u64 = amountPerPackage * share_recycler / 100;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":"reward_per_package_recycler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `rewardPerPackageRecycler` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:61:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let rewardPerPackageRecycler: u64 = amountPerPackage * share_recycler / 100;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `reward_per_package_recycler`\u001b[0m\n\n"}
{"message":"variable `packagesSorted` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2449,"byte_end":2463,"line_start":62,"line_end":62,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let packagesSorted: u64 = 0;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2449,"byte_end":2463,"line_start":62,"line_end":62,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let packagesSorted: u64 = 0;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"packages_sorted","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `packagesSorted` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:62:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let packagesSorted: u64 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packages_sorted`\u001b[0m\n\n"}
{"message":"variable `packagesWrongSorted` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2482,"byte_end":2501,"line_start":63,"line_end":63,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let packagesWrongSorted: u64 = 0;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2482,"byte_end":2501,"line_start":63,"line_end":63,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let packagesWrongSorted: u64 = 0;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"packages_wrong_sorted","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `packagesWrongSorted` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:63:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let packagesWrongSorted: u64 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packages_wrong_sorted`\u001b[0m\n\n"}
{"message":"variable `remainingAmountPerCharge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2520,"byte_end":2544,"line_start":64,"line_end":64,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let remainingAmountPerCharge: u64 = amountPerCharge;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2520,"byte_end":2544,"line_start":64,"line_end":64,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let remainingAmountPerCharge: u64 = amountPerCharge;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":"remaining_amount_per_charge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remainingAmountPerCharge` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:64:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let remainingAmountPerCharge: u64 = amountPerCharge;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remaining_amount_per_charge`\u001b[0m\n\n"}
{"message":"variable `activationDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2577,"byte_end":2591,"line_start":65,"line_end":65,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let activationDate: u64 = ctx.timestamp() / NANO_TIME_DIVIDER;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2577,"byte_end":2591,"line_start":65,"line_end":65,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let activationDate: u64 = ctx.timestamp() / NANO_TIME_DIVIDER;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"activation_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `activationDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:65:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let activationDate: u64 = ctx.timestamp() / NANO_TIME_DIVIDER;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `activation_date`\u001b[0m\n\n"}
{"message":"variable `expiryDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2644,"byte_end":2654,"line_start":66,"line_end":66,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let expiryDate: u64 = f.params.expiry_date().value() / NANO_TIME_DIVIDER;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2644,"byte_end":2654,"line_start":66,"line_end":66,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let expiryDate: u64 = f.params.expiry_date().value() / NANO_TIME_DIVIDER;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"expiry_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `expiryDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:66:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let expiryDate: u64 = f.params.expiry_date().value() / NANO_TIME_DIVIDER;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `expiry_date`\u001b[0m\n\n"}
{"message":"variable `ppNew` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2723,"byte_end":2728,"line_start":68,"line_end":68,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let ppNew = ProductPass{","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":2723,"byte_end":2728,"line_start":68,"line_end":68,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let ppNew = ProductPass{","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"pp_new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppNew` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:68:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppNew = ProductPass{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_new`\u001b[0m\n\n"}
{"message":"variable `requiredToken` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":3446,"byte_end":3459,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"    let mut requiredToken = &ppNew.charge_weight * f.state.price_per_mg().value();","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":3446,"byte_end":3459,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"    let mut requiredToken = &ppNew.charge_weight * f.state.price_per_mg().value();","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":"required_token","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `requiredToken` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:88:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut requiredToken = &ppNew.charge_weight * f.state.price_per_mg().value();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `required_token`\u001b[0m\n\n"}
{"message":"variable `newComps` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":3914,"byte_end":3922,"line_start":100,"line_end":100,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let newComps= f.params.compositions();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":3914,"byte_end":3922,"line_start":100,"line_end":100,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let newComps= f.params.compositions();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"new_comps","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newComps` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:100:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newComps= f.params.compositions();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_comps`\u001b[0m\n\n"}
{"message":"variable `weightTester` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":4179,"byte_end":4191,"line_start":110,"line_end":110,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut weightTester: u64 = 0;","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":4179,"byte_end":4191,"line_start":110,"line_end":110,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut weightTester: u64 = 0;","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"weight_tester","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `weightTester` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:110:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut weightTester: u64 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `weight_tester`\u001b[0m\n\n"}
{"message":"variable `currentComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":4254,"byte_end":4265,"line_start":114,"line_end":114,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let currentComp = newComps.get_composition(i).value();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":4254,"byte_end":4265,"line_start":114,"line_end":114,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let currentComp = newComps.get_composition(i).value();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"current_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:114:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let currentComp = newComps.get_composition(i).value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_comp`\u001b[0m\n\n"}
{"message":"variable `requiredFunds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5308,"byte_end":5321,"line_start":141,"line_end":141,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredFunds: u64 = f.params.charge_weight().value() * f.state.price_per_mg().value();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5308,"byte_end":5321,"line_start":141,"line_end":141,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredFunds: u64 = f.params.charge_weight().value() * f.state.price_per_mg().value();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"required_funds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `requiredFunds` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:141:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let requiredFunds: u64 = f.params.charge_weight().value() * f.state.price_per_mg().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `required_funds`\u001b[0m\n\n"}
{"message":"variable `pricePerMg` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5597,"byte_end":5607,"line_start":147,"line_end":147,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let pricePerMg = f.state.price_per_mg().value();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5597,"byte_end":5607,"line_start":147,"line_end":147,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let pricePerMg = f.state.price_per_mg().value();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"price_per_mg","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `pricePerMg` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:147:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let pricePerMg = f.state.price_per_mg().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `price_per_mg`\u001b[0m\n\n"}
{"message":"variable `tokenPerPackage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5650,"byte_end":5665,"line_start":148,"line_end":148,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let tokenPerPackage: u64 =  pass.package_weight * pricePerMg;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":5650,"byte_end":5665,"line_start":148,"line_end":148,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let tokenPerPackage: u64 =  pass.package_weight * pricePerMg;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"token_per_package","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tokenPerPackage` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:148:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let tokenPerPackage: u64 =  pass.package_weight * pricePerMg;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `token_per_package`\u001b[0m\n\n"}
{"message":"variable `fracID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":6310,"byte_end":6316,"line_start":170,"line_end":170,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = create_random_hash(ctx);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":6310,"byte_end":6316,"line_start":170,"line_end":170,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = create_random_hash(ctx);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"frac_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:170:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracID = create_random_hash(ctx);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_id`\u001b[0m\n\n"}
{"message":"variable `newFrac` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":6613,"byte_end":6620,"line_start":177,"line_end":177,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newFrac = Fraction {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":6613,"byte_end":6620,"line_start":177,"line_end":177,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newFrac = Fraction {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"new_frac","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newFrac` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:177:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newFrac = Fraction {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_frac`\u001b[0m\n\n"}
{"message":"variable `ppID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7028,"byte_end":7032,"line_start":193,"line_end":193,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7028,"byte_end":7032,"line_start":193,"line_end":193,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"pp_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:193:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppID = f.params.pp_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_id`\u001b[0m\n\n"}
{"message":"variable `fracID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7069,"byte_end":7075,"line_start":194,"line_end":194,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7069,"byte_end":7075,"line_start":194,"line_end":194,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"frac_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:194:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracID = f.params.frac_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_id`\u001b[0m\n\n"}
{"message":"variable `ppComps` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7226,"byte_end":7233,"line_start":197,"line_end":197,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let ppComps = f.state.compositions().get_compositions(&ppID);","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7226,"byte_end":7233,"line_start":197,"line_end":197,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let ppComps = f.state.compositions().get_compositions(&ppID);","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"pp_comps","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppComps` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:197:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppComps = f.state.compositions().get_compositions(&ppID);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_comps`\u001b[0m\n\n"}
{"message":"variable `fracComps` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7292,"byte_end":7301,"line_start":198,"line_end":198,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let fracComps = f.state.frac_compositions().get_frac_compositions(&fracID);","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7292,"byte_end":7301,"line_start":198,"line_end":198,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let fracComps = f.state.frac_compositions().get_frac_compositions(&fracID);","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"frac_comps","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracComps` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:198:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracComps = f.state.frac_compositions().get_frac_compositions(&fracID);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_comps`\u001b[0m\n\n"}
{"message":"variable `foundMat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7530,"byte_end":7538,"line_start":206,"line_end":206,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"            let mut foundMat: bool = false;","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7530,"byte_end":7538,"line_start":206,"line_end":206,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"            let mut foundMat: bool = false;","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":"found_mat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `foundMat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:206:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut foundMat: bool = false;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `found_mat`\u001b[0m\n\n"}
{"message":"variable `newMass` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7755,"byte_end":7762,"line_start":210,"line_end":210,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"                    let newMass = fracComps.get_frac_composition(j).value().mass + ppComps.get_composition(i).value().mass;","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7755,"byte_end":7762,"line_start":210,"line_end":210,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"                    let newMass = fracComps.get_frac_composition(j).value().mass + ppComps.get_composition(i).value().mass;","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":"new_mass","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newMass` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:210:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    let newMass = fracComps.get_frac_composition(j).value().mass + ppComps.get_composition(i).value().mass;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_mass`\u001b[0m\n\n"}
{"message":"variable `newShare` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7879,"byte_end":7887,"line_start":211,"line_end":211,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"                    let newShare = FracComposition {","highlight_start":25,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":7879,"byte_end":7887,"line_start":211,"line_end":211,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"                    let newShare = FracComposition {","highlight_start":25,"highlight_end":33}],"label":null,"suggested_replacement":"new_share","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newShare` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:211:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    let newShare = FracComposition {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_share`\u001b[0m\n\n"}
{"message":"variable `ppComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":8261,"byte_end":8267,"line_start":221,"line_end":221,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"                let ppComp = ppComps.get_composition(i).value();","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":8261,"byte_end":8267,"line_start":221,"line_end":221,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"                let ppComp = ppComps.get_composition(i).value();","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":"pp_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:221:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let ppComp = ppComps.get_composition(i).value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_comp`\u001b[0m\n\n"}
{"message":"variable `newMat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":8431,"byte_end":8437,"line_start":225,"line_end":225,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"                let newMat = FracComposition{","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":8431,"byte_end":8437,"line_start":225,"line_end":225,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"                let newMat = FracComposition{","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":"new_mat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newMat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:225:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let newMat = FracComposition{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_mat`\u001b[0m\n\n"}
{"message":"variable `ppComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":8722,"byte_end":8728,"line_start":237,"line_end":237,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let ppComp = ppComps.get_composition(i).value();","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":8722,"byte_end":8728,"line_start":237,"line_end":237,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let ppComp = ppComps.get_composition(i).value();","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"pp_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:237:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let ppComp = ppComps.get_composition(i).value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_comp`\u001b[0m\n\n"}
{"message":"variable `newMat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":8876,"byte_end":8882,"line_start":241,"line_end":241,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let newMat = FracComposition{","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":8876,"byte_end":8882,"line_start":241,"line_end":241,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let newMat = FracComposition{","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"new_mat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newMat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:241:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let newMat = FracComposition{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_mat`\u001b[0m\n\n"}
{"message":"variable `fracID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":11883,"byte_end":11889,"line_start":310,"line_end":310,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":11883,"byte_end":11889,"line_start":310,"line_end":310,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"frac_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:310:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracID = f.params.frac_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_id`\u001b[0m\n\n"}
{"message":"variable `recyclateID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":12042,"byte_end":12053,"line_start":314,"line_end":314,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let recyclateID = create_random_hash(ctx);    ","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":12042,"byte_end":12053,"line_start":314,"line_end":314,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let recyclateID = create_random_hash(ctx);    ","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"recyclate_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `recyclateID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:314:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let recyclateID = create_random_hash(ctx);    \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `recyclate_id`\u001b[0m\n\n"}
{"message":"variable `newRecy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":12344,"byte_end":12351,"line_start":321,"line_end":321,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newRecy = Recyclate {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":12344,"byte_end":12351,"line_start":321,"line_end":321,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newRecy = Recyclate {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"new_recy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newRecy` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:321:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newRecy = Recyclate {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_recy`\u001b[0m\n\n"}
{"message":"variable `newRecyCompProxy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":12767,"byte_end":12783,"line_start":336,"line_end":336,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let newRecyCompProxy = f.state.recy_compositions().get_recy_compositions(&newRecy.recy_id);","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":12767,"byte_end":12783,"line_start":336,"line_end":336,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let newRecyCompProxy = f.state.recy_compositions().get_recy_compositions(&newRecy.recy_id);","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"new_recy_comp_proxy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newRecyCompProxy` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:336:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newRecyCompProxy = f.state.recy_compositions().get_recy_compositions(&newRecy.recy_id);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_recy_comp_proxy`\u001b[0m\n\n"}
{"message":"variable `fracComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":12863,"byte_end":12871,"line_start":337,"line_end":337,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp: ArrayOfMutableFracComposition = f.state.frac_compositions().get_frac_compositions(&newRecy.frac_id);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":12863,"byte_end":12871,"line_start":337,"line_end":337,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp: ArrayOfMutableFracComposition = f.state.frac_compositions().get_frac_compositions(&newRecy.frac_id);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"frac_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:337:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracComp: ArrayOfMutableFracComposition = f.state.frac_compositions().get_frac_compositions(&newRecy.frac_id);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_comp`\u001b[0m\n\n"}
{"message":"variable `fComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":13036,"byte_end":13041,"line_start":341,"line_end":341,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let fComp = fracComp.get_frac_composition(i).value();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":13036,"byte_end":13041,"line_start":341,"line_end":341,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let fComp = fracComp.get_frac_composition(i).value();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":"f_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:341:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let fComp = fracComp.get_frac_composition(i).value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `f_comp`\u001b[0m\n\n"}
{"message":"variable `recyComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":13172,"byte_end":13180,"line_start":345,"line_end":345,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let recyComp = RecyComposition{","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":13172,"byte_end":13180,"line_start":345,"line_end":345,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let recyComp = RecyComposition{","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"recy_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `recyComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:345:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let recyComp = RecyComposition{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `recy_comp`\u001b[0m\n\n"}
{"message":"variable `prodID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":14717,"byte_end":14723,"line_start":396,"line_end":396,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let prodID = f.params.prod_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":14717,"byte_end":14723,"line_start":396,"line_end":396,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let prodID = f.params.prod_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"prod_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `prodID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:396:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m396\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let prodID = f.params.prod_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `prod_id`\u001b[0m\n\n"}
{"message":"variable `ppID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":15270,"byte_end":15274,"line_start":417,"line_end":417,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":15270,"byte_end":15274,"line_start":417,"line_end":417,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"pp_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:417:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppID = f.params.pp_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_id`\u001b[0m\n\n"}
{"message":"variable `remainingAmountPerCharge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":15436,"byte_end":15460,"line_start":420,"line_end":420,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let remainingAmountPerCharge = pp_value.remaining_amount_per_charge;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"scauri/src/scauri.rs","byte_start":15436,"byte_end":15460,"line_start":420,"line_end":420,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let remainingAmountPerCharge = pp_value.remaining_amount_per_charge;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":"remaining_amount_per_charge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remainingAmountPerCharge` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mscauri/src/scauri.rs:420:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let remainingAmountPerCharge = pp_value.remaining_amount_per_charge;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remaining_amount_per_charge`\u001b[0m\n\n"}
{"message":"55 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 55 warnings emitted\u001b[0m\n\n"}
