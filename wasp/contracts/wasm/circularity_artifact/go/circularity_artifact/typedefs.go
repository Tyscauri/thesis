// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package circularity_artifact

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ArrayOfImmutableComposition struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableComposition) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableComposition) GetComposition(index uint32) ImmutableComposition {
	return ImmutableComposition{proxy: a.proxy.Index(index)}
}

type ImmutableCompositions = ArrayOfImmutableComposition

type ArrayOfMutableComposition struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableComposition) AppendComposition() MutableComposition {
	return MutableComposition{proxy: a.proxy.Append()}
}

func (a ArrayOfMutableComposition) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableComposition) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableComposition) GetComposition(index uint32) MutableComposition {
	return MutableComposition{proxy: a.proxy.Index(index)}
}

type MutableCompositions = ArrayOfMutableComposition

type ArrayOfImmutableFracComposition struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableFracComposition) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableFracComposition) GetFracComposition(index uint32) ImmutableFracComposition {
	return ImmutableFracComposition{proxy: a.proxy.Index(index)}
}

type ImmutableFracCompositions = ArrayOfImmutableFracComposition

type ArrayOfMutableFracComposition struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableFracComposition) AppendFracComposition() MutableFracComposition {
	return MutableFracComposition{proxy: a.proxy.Append()}
}

func (a ArrayOfMutableFracComposition) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableFracComposition) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableFracComposition) GetFracComposition(index uint32) MutableFracComposition {
	return MutableFracComposition{proxy: a.proxy.Index(index)}
}

type MutableFracCompositions = ArrayOfMutableFracComposition

type ArrayOfImmutableRecyComposition struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableRecyComposition) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableRecyComposition) GetRecyComposition(index uint32) ImmutableRecyComposition {
	return ImmutableRecyComposition{proxy: a.proxy.Index(index)}
}

type ImmutableRecyCompositions = ArrayOfImmutableRecyComposition

type ArrayOfMutableRecyComposition struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableRecyComposition) AppendRecyComposition() MutableRecyComposition {
	return MutableRecyComposition{proxy: a.proxy.Append()}
}

func (a ArrayOfMutableRecyComposition) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableRecyComposition) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableRecyComposition) GetRecyComposition(index uint32) MutableRecyComposition {
	return MutableRecyComposition{proxy: a.proxy.Index(index)}
}

type MutableRecyCompositions = ArrayOfMutableRecyComposition
